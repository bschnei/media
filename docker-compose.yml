version: "3.7"

networks:

  # network for services proxied by traefik
  frontend:
    ipam:
      config:
        - subnet: 172.16.0.0/24
        # gateway will be 172.16.0.1

  # provides access to Docker API via socket-proxy service
  socket_proxy:
    internal: true

secrets:
  authelia_jwt_secret:
    file: secrets/authelia_jwt_secret
  ldap_password:
    file: secrets/ldap_password
  authelia_session_secret:
    file: secrets/authelia_session_secret
  authelia_smtp_password:
    file: secrets/authelia_smtp_password
  namecheap_key:
    file: secrets/namecheap_key
  namecheap_user:
    file: secrets/namecheap_user
  plex_claim:
    file: secrets/plex_claim

volumes:
  firefox:
  plex:

services:

  books:
    image: linuxserver/calibre-web:latest
    container_name: calibre-web
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      PGID:
      PUID:
      TZ:
    networks:
      - frontend
    volumes:
      - $DOCKERDIR/calibre:/config
      - $MEDIADIR/Books:/books
    labels:
      - traefik.enable=true
      - traefik.http.routers.books.entrypoints=websecure
      - traefik.http.routers.books.middlewares=authelia-chain@file

  browse:
    image: jlesage/firefox:latest
    container_name: firefox
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    environment:
      USER_ID: $PUID
      GROUP_ID: $PGID
      TZ:
      KEEP_APP_RUNNING: 1
      DISPLAY_WIDTH: 1920
      DISPLAY_HEIGHT: 1080
    networks:
      - frontend
    volumes:
      - firefox:/config
      - $MEDIADIR/Downloads:/config/downloads
      - /dev/shm:/dev/shm
    labels:
      - traefik.enable=true
      - traefik.http.routers.browse.entrypoints=websecure
      - traefik.http.routers.browse.middlewares=authelia-chain@file
      - traefik.http.services.browse-docker.loadbalancer.server.port=5800

  login:
    image: authelia/authelia:4.28
    container_name: authelia
    restart: unless-stopped 
    security_opt:
      - no-new-privileges:true
    environment:
      AUTHELIA_JWT_SECRET_FILE: /run/secrets/authelia_jwt_secret
      AUTHELIA_SESSION_SECRET_FILE: /run/secrets/authelia_session_secret
      AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE: /run/secrets/authelia_smtp_password
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD_FILE: /run/secrets/ldap_password
      TZ:
    networks:
      - frontend
    volumes:
      - $DOCKERDIR/authelia:/config
    secrets:
      - authelia_jwt_secret
      - ldap_password
      - authelia_session_secret
      - authelia_smtp_password
    labels:
      - traefik.enable=true
      - traefik.http.routers.login.entrypoints=websecure
      - traefik.http.routers.login.middlewares=authelia-chain@file

  nzbget:
    image: linuxserver/nzbget:latest
    container_name: nzbget
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      PGID:
      PUID:
      TZ:
    networks:
      - frontend
    volumes:
      - $DOCKERDIR/nzbget:/config
      - $MEDIADIR/Downloads:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.nzbget.entrypoints=websecure
      - traefik.http.routers.nzbget.middlewares=authelia-chain@file

  ombi:
    image: linuxserver/ombi:latest
    container_name: ombi
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      PGID:
      PUID:
      TZ:
    networks:
      - frontend
    volumes:
      - $DOCKERDIR/ombi:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.ombi.entrypoints=websecure
      - traefik.http.routers.ombi.middlewares=secure-headers@file

  plex:
    image: plexinc/pms-docker:public
    container_name: plex
    restart: unless-stopped
    environment:
      ADVERTISE_IP: "https://plex.$DOMAINNAME"
      HOSTNAME: PlexServer
      PLEX_CLAIM: "/run/secrets/plex_claim"
      PLEX_GID: $PGID
      PLEX_UID: $PUID
      TZ:
    networks:
      - frontend
    ports:
      - "32400:32400/tcp" # main port for Plex Media Server
      - "32410:32410/udp" # for GDM discovery on the LAN
      - "32412-32414:32412-32414/udp" # for GDM discovery on the LAN
    volumes:
      - plex:/config
      - $MEDIADIR/Music:/data/music
      - $MEDIADIR/Movies:/data/movies
      - "$MEDIADIR/TV Shows:/data/tv"
    secrets:
      - plex_claim
    labels:
      - traefik.enable=true
      - traefik.http.routers.plex.entrypoints=websecure
      - traefik.http.routers.plex.middlewares=secure-headers@file
      - traefik.http.services.plex-docker.loadbalancer.server.port=32400

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      PGID:
      PUID:
      TZ:
    networks:
      - frontend
    volumes:
      - $DOCKERDIR/radarr:/config
      - $MEDIADIR:/media
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.entrypoints=websecure
      - traefik.http.routers.radarr.middlewares=authelia-chain@file

  # secures access to the Docker API
  socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: socket-proxy
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      - CONTAINERS=1 # for traefik
    networks:
      - socket_proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      PGID:
      PUID:
      TZ:
    networks:
      - frontend
    volumes:
      - $DOCKERDIR/sonarr:/config
      - "$MEDIADIR/TV Shows:/tv"
      - $MEDIADIR/Downloads:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.entrypoints=websecure
      - traefik.http.routers.sonarr.middlewares=authelia-chain@file

  traefik:
    image: traefik:v2.4
    container_name: traefik 
    restart: unless-stopped
    command:
      - --global.checknewversion=true
      - --global.sendanonymoususage=true
      - --api=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure # redirect http to https
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls.certResolver=leresolver
      - --entrypoints.websecure.http.tls.domains[0].main=$DOMAINNAME
      - --entrypoints.websecure.http.tls.domains[0].sans=*.$DOMAINNAME
      - --certificatesresolvers.leresolver.acme.email=admin@$DOMAINNAME
      - --certificatesresolvers.leresolver.acme.storage=acme.json
      - --certificatesresolvers.leresolver.acme.dnschallenge.provider=namecheap
      - --certificatesresolvers.leresolver.acme.dnschallenge.delaybeforecheck=90
      - --providers.docker=true
      - --providers.docker.defaultRule=Host(`{{ index .Labels "com.docker.compose.service"}}.$DOMAINNAME`)
      - --providers.docker.endpoint=tcp://socket-proxy:2375
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=docker_frontend
      - --providers.file.directory=/providers
    environment:
      NAMECHEAP_API_KEY_FILE: /run/secrets/namecheap_key
      NAMECHEAP_API_USER_FILE: /run/secrets/namecheap_user
      TZ:
    networks:
      frontend:
        ipv4_address: 172.16.0.254
      socket_proxy:
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - $DOCKERDIR/traefik/acme/acme.json:/acme.json
      - $DOCKERDIR/traefik/providers:/providers
    secrets:
      - namecheap_key
      - namecheap_user
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=authelia-chain@file

